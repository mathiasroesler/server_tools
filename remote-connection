#!/usr/bin/env bash

#########################################################
### Bash script to connect to a remote server.        	#
### Last modified: 02/2021			      	#
### Author: Mathias Roesler		      	      	#
### Contact: mathias.roesler@reseau-figure.org 		#
#########################################################


# Get necessary functions
source server_functions
define_const


print_usage() {
	# Prints usage.
	#
	# Arguments:
	# Return:
	#
	printf "Usage: $NAME [-hlL] [-adm server] [-p port] [-o options] [-c comment] server \n" 
	printf "Connects to a remote server using ssh.\n\n"
	print_options

return 0
}


# Parse options
while getopts $ARGUMENTS opt; do
	parse_args $opt 
done

if [[ $RECURSIVE == true ]]; then
	error_handler "invalid option."
fi

if [[ $ADD == true ]]; then
	add_server 
	exit 0
fi

if [[ $DELETE == true ]]; then
	delete_server
	exit 0
fi

if [[ $MODIFY == true ]]; then
	modify_server
	exit 0
fi

# Shift to first argument after options.
shift $(($OPTIND - 1))

argument_nb_check $# 1

set_connection_params $1

print_info
LOGIN_DATE=$(date +"%a %d-%m-%y %T")

ssh -p $port_number $options $server

if [[ $? == 255 ]]; then
	MESSAGE="$LOGIN_DATE LOGIN failed to $server by local user $(whoami)"
	log_activity $LOG_FILE "$MESSAGE"

else 
	LOGOUT_DATE=$(date +"%a %d-%m-%y %T")
	MESSAGE="$LOGIN_DATE LOGIN successful to $server by local user $(whoami)"
	log_activity $LOG_FILE "$MESSAGE"

	MESSAGE="$LOGOUT_DATE LOGOUT from $server by local user $(whoami)"
	log_activity $LOG_FILE "$MESSAGE"
fi
