#!/bin/bash

function print_usage() {
	printf "Usage: remote-connection [-h] [-P NUMBER] server \n" 
	printf "Connects to a remote server using ssh. The available servers"
	printf " are:\n"
	printf "  1: mathias@teaching.lsteffenel.fr (port number 6748)\n"
	printf "  2: jetsonnano@192.168.1.12 \n"
	printf "  3: jetsonnano@192.168.43.5 \n"
	printf "  4: mroesler@romeo-login1.univ-reims.fr \n"
	printf "  5: mroesler@dgx1.univ-reims.fr (localhost:30002)\n"
	printf "Options:\n"
	printf " -h, print help.\n"
	printf " -P NUMBER, specify port number.\n"

return 0
}


function print_info() {
	printf "Server: "
	echo $server
	printf "Port: "
	echo $port_number

return 0
}


function server_selection() {
	case $1 in
		1)
			server=mathias@teaching.lsteffenel.fr
			if [[ $PORT == false ]]; then
				port_number=6748
			fi
			;;
		2)
			server=jetsonnano@192.168.1.12
			;;
		3)
			server=jetsonnano@192.168.43.5
			;;
		4)
			server=mroesler@romeo-login1.univ-reims.fr
			;;
		5)
			server=mroesler@dgx1.univ-reims.fr
			options="-L 30001:localhost:5000 -L 30002:localhost:8888"
			;;

		?)
			echo "remote-connection: invalid server choice."
			echo "Try 'remote-connection -h' for help."
			exit
			;;
	esac

return 0
}

PORT=false
port_number=22

# Parse options
while getopts ":hP:" opt; do
	case $opt in
		h) 
			print_usage
			exit 
			;;
		P)
			port_number="${OPTARG}"
			PORT=true
		       	;;

		?)
			echo "remote-connection: invalid option."
			echo "Try 'remote-connection -h' for help."
			exit
			;;
	esac
done

# Shift to first argument after options.
shift $(($OPTIND - 1))

if [[ $# -lt 1 ]]; then
	echo "remote-connection: not enough arguments."
	echo "Try 'remote-connection -h' for help."
	exit
fi

server_selection $1

print_info
ssh -p $port_number $options $server 
