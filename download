#!/bin/bash
#!/usr/bin/env bash

#########################################################
### Bash script to download files from a remote server. #
### Last modified: 02/2021			      	#
### Author: Mathias Roesler		      	      	#
### Contact: mathias.roesler@reseau-figure.org 		#
#########################################################


source server_functions
define_const


print_usage() {
	# Prints usage.
	#
	# Arguments:
	# Return:
	#
	printf "Usage: $NAME [-hlLr] [-adm server] [-p port] [-o options] [-c comment] server file ... "
	printf "destination\n"
	printf "Copy file from remote server to destination or "
	printf "multiple files from remote server to destination "
	printf "directory using scp.\n\n"
	print_options true

return 0
}


# Parse options
while getopts $ARGUMENTS opt; do
	parse_args $opt
done

if [[ $ADD == true ]]; then
	add_server 
	exit 0
fi

if [[ $DELETE == true ]]; then
	delete_server
	exit 0
fi

if [[ $MODIFY == true ]]; then
	modify_server
	exit 0
fi

argument_nb_check $# 3

# Shift to first argument after options
shift $(($OPTIND - 1))

set_connection_params $1; shift

ARGS="$@"
DESTINATION=${@: -1}
FILES=${ARGS%${DESTINATION}}
DOWNLOAD_DATE=$(date +"%a %d-%m-%y %T")

if [[ $RECURSIVE == 'true' ]]; then
	print_info
	scp -rP $port_number $options $server:$FILES $DESTINATION

else
	print_info
 	scp -P $port_number $options $server:$FILES $DESTINATION
fi

SUCCESS=$?

if [[ $DESTINATION == "" || $DESTINATION == "." ]]; then
	DESTINATION=$(pwd)
fi


if [[ $SUCCESS != 0 ]]; then
	# An error occured
	MESSAGE="$DOWNLOAD_DATE DOWNLOAD failed from $server of $FILES to $DESTINATION of local user $(whoami)"
	log_activity $LOG_FILE "$MESSAGE"

else
	# No error
	MESSAGE="$DOWNLOAD_DATE DOWNLOAD successful from $server of $FILES to $DESTINATION of local user $(whoami)"
	log_activity $LOG_FILE "$MESSAGE"

fi
